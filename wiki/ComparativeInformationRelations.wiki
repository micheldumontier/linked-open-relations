#summary compare individuals with regard to a quality

= Introduction =

 _preliminary_

Comparative relations relate two individuals with regard to quality values of these individuals. They can either represent the equality of individuals with regard to this quality or their difference and further specify this inequality.


= Comparative Information relations =

*Name:* equals

*Definition:* 

*Examples:* 

*Issues:* 

*Algebraic properties:* 

*Rule:*

----

*Name:* unequals/ different from

*Definition:* inverse of equals

*Examples:* 

*Issues:* 

*Algebraic properties:* 

*Rule:*

----


*Name:* similars/ similar to

*Superrelation:* unequals

*Definition:* 

*Examples:* 

*Issues:* 

*Algebraic properties:* 

*Rule:*

----

*Name:* larger than/ smaller than

*Definition:* 

*Examples:* 

*Issues:* 

*Algebraic properties:* 

*Rule:*

= Components =

  * in relation to -> indicates the reference object / part / quality
  * has qualifier -> increased, decreased, etc.

= Details =

 * numerical comparison: _compn_(m, n)
   m, n are numbers on nomial, ordinal, interval, ratio scales. _compn_ is one of: _equalsn, unequalsn_ for all scale types of m, n with m=n for _equalsn_ and m!=n for _unequalsn_. _unequalsn_ is on of _larger thann/ smaller thann_ for m, n on ordinal, inverall and ratio scales with m>n for _larger thann_ and m<n for _smaller thann_. _difference ofn_ is defined as quantification of inequality for intervall and ratio scales as |m-n| (and as _rank difference ofn_ for ordinal scales), _ratio ofn_ is only defined for ratio scales as m/n.
 * numerical comparison: _compn_(m, n, i)
   _similarityn_ is defined as _smaller thann_(_differencen_(n, m), i) with n, m on ordinal, intervall and ration scales and i an intervall width > 0 on ordinal, intervall and ratio scales. With i=0 (not given) _comp_(m, n)
 

 * generic comparison: _comp_(a, b, qa, qb, m, n, i)
   For entities a, b of generic type with qualities qa, qb having values (or regions) m of qa and n of qb, the following _comp_ relations can be defined: _comp_(a, b, qa, qb, m, n, i) -> _compn_(m, n, i) for all comparisons on numeric values m, n, i (names of the relations of _compn_ without postfix "n"). For comparisons on qualities with discrete qualitative values either a transformation on ordinal numerical scale is sufficient. Or the two relations _equals_ and _similars_ must be defined in term of the specific qualities and their respective values.
 
 * generic comparison with triangulation: _comp_(a, b, qa, qb, m, n, c, qc, p, i)
   [Don't know if we should follow this] For entities, qualities and values (regions) as above the generic reference entity c with quality qc and its value p, the following _comp_ relations can be defined: 
 _onesided_ (_larger thann_(m, p) AND larger thann_(n, p) OR _smaller thann(m, p) AND _smaller thann_(n, p)), _twosided_(NOT _onesided_), _residual diff_(_differencen_(_differencen_(m,p), _differencen_(n, p)), residual ratio_ (_ration_(_differencen_(m,p), _differencen_(n, p))



=== (non exhaustive) list of comparisons ==

 * similarity/ equality vs. dissimilarity/ inequality
 * quality of distinction (color, tone)
 * direction of difference (ordering)
 * (absolute) size of difference (magnitude, scale)
 * algebraic properties of differences (ratio is meaningful, scale, inversity, symmetry, reflexivity?, transitivity?)
 * intended precision of similarity (explicit vagueness)
 * relational system specified (normative element(s) stated)
 * etc.


= Questions =

  * Possibly, some of the information relations are (ternary) comparative: has_rank  is comparative. One can have only have a rank in comparison to other individuals (so this is the assignment of a number depending on the comparison)???

= Examples =

  * 'is similar to'
  * 'is different from'
  * 'has high plasma membrane amount' / 'has low plasma membrane part'
  * 'has high plasma membrane part' / 'has low plasma membrane amount' 

= Ternary relation model =

An RDF-expressible ternary model is proposed:
Consider two comparanda C1 and C2, which are particulars that are compared. Consider a particular quality Q1.

E.g. C1 and C2 are stars. Q1 is brightness magnitude.
  * C1 is decreased in magnitude relative to C2

<=>

  * 'is decreased in magnitude relative to' rdfs:subPropertyOf 'is before'
  * C1 'is before' C2
  * C1 'participates in' _comparison654231
  * 'is before' 'participates in' _comparison654231
  * C2 'participates in' _comparison654231
  * _comparison654231 'is bearer of' magnitude_quality_Q1







 