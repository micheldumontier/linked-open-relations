= *LORE - LINKED OPEN RELATIONS*= 

Created by: 
André Andrade
Ward Blondé
Martin Boeker
Michel Dumontier
Stefan Schulz



==Mission statement:==
Create a domain independent standard for Semantic Web relations

==Scope==
The objective of lore is to harvest binary predicates and relations that are in use, improve them and organize them from a perspective of scientific Knowledge Management and Formal Ontology. 

LORE is proposing to provide 
 * an orthogonal, domain-independent set of binary relations expressed as a (limited) list of OWL object-properties;

 * a characterization of each relation in terms of meaning, scope restrictions, algebraic properties; 

 * practices for creating and transforming predicate-like relations from the semantic Web that are not within this list.

 * develop and for (1) chaining LORE relations and for (2) transforming triple-like expressions containing non-LORE relations into triples containing LORE relations. 

 * assess these rules using real data. In contrast to the practice of formal ontology, rule are not either true or false. Rather, we assess the usefulness of rules from a retrieval background (precision / recall). For instance, if a rule tends to overgenerate, it may still be useful in a recall-optimized information retrieval scenario. 


==Terminological issues==
There are controversies regarding the use of terms like "relation", "relationships", "role", "relation type", "relation instance", "relation assertion", "predicate", "predication". 
Until these controversies are settled we use uniformly the word "relation", distinguishing between LORE and non-LORE relations.

==Three semantic levels==
LORE classifies relations as, in a first approximation, distinguished between the following three semantic levels:

===LEVEL 1===
These relations denote predicate-like relations (e.g. *stands in*, *phosphorylizes*, *has-author*), close to natural language.
We can here further distinguish between 
a) domain dependent relations 
b) domain-independent relations
Characteristics of level 1 relations:

 * Intuitively understandable

 * Most of these relations would better describe the domain if they were n-ary (n > 2 )

 * ambiguous and context-dependent

 * From an ontological point of view, Level 1 relations are normally not used in defining axioms. 

 * There is also a tendency to assert level 1 relations between classes _Insulin_ *stimulates* _Receptor_

 * In many ontologies level 1 relations are expressed as classes, e.g. _Phosphorylation_, _Authoring_..., in order to express dispositional or procedural knowledge. 

 * SPARQL - friendly

===LEVEL 2=== 
These relations are ontological in a strict sense. They have the following characteristics: 

 * They are domain-independent

 * They can be used for expressing inherent properties of entities as necessary conditions by universal quantification.

 * They are binary, although they would, in order to be complete, often require time as a third argument

 * Despite their universal applicability they are often seldomly used in triple stores

 * Not easily understandable, therefore adequate naming is n important issue

 * Reasoner - friendly, but also SPARQL
 

===LEVEL 3=== 
These relations that are refinements of Level 2 relations. 
Characteristics:

 * They can be fully defined.

 * are often domain dependent. Example: *has-town* is a level 3 subrelation of *has-part*. 

 * Reasoner friendy


==How LORE addresses the three levels==

LORE provides standard practices and relations for all three levels. Only for level 2 it claims to be exhaustive. Level 2 relations will be expressed as OWL object properties. Level 1 and 3 relations are added as long they are largely domain-independent and considered important by the Semantic Web community. 

LORE will not just replicate popular relations that already have already introduced elsewhere (Dublin Core, FOAF, ...). However, LORE will propose solutions how to transform sets of triples containing level 1 or 3 relations into sets of triples containing level two relations only

For all levels popular and important examples may be provided.  

== LORE rules ==

Rules are an important means for transforming between relation expressions. The following example instantiates a rule that transforms between level 2 and level 3:

{{{
 "France *has-province* Bretagne" and  "Bretagne *has-type* Province" <=>
 "France *has-part* Bretagne"
}}}

The rule could be abstracted as 
   
{{{
 (?X *has-province* ?Y) and (?Y *has-type* Province) <=>
 (?X *has-part* ?Y)
}}}











Level 2 would be such that levels 1 and 3 can contain subrelations (or chained relations) of 2.  
 


 